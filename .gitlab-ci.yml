stages:
  - dast

baseline-scan:
  stage: dast
  image: docker:dind
  tags:
    - dind_lms
  variables:
    # website: $(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' lms)
    # login_url: $(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' lms)
    username_id: "email"
    password_id: "password"
    submit_id: "submit"
    username: "dast@mail.ru"
    password: "Dastdast123"
  allow_failure: true
  script: 
    # - docker run --rm -d --name lms geezybe/lms_project:latest
    # - website=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' lms)
    # - login_url=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' lms)
    # - whoami && ls -ld && ls -l && pwd && ls /
    # - docker run -v $(pwd):/wrk/:rw -t busybox:latest ls -ld /wrk/
      - docker run --rm -v $(pwd):/zap/wrk/:rw -t ictu/zap2docker-weekly /bin/bash -c "touch /zap/wrk/dast-report.html && ls -la /zap/wrk"
    # - docker run --rm -v $(pwd):/zap/wrk/:rw -t ictu/zap2docker-weekly zap-baseline.py -t http://$website:5000 -r dast-report.html --hook=/zap/auth_hook.py -z "auth.loginurl=http://$login_url:5000 auth.username_field=$username_id auth.password_field=$password_id auth.submit_field=$submit_id auth.username=$username auth.password=$password" || true
    # - ls -a 
  artifacts:
    name: "dast-report"
    paths: 
        - dast-report.html